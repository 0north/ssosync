AWSTemplateFormatVersion: '2010-09-09'

Description: 
  This CloudFormation template will deploy a full CI/CD pipeline to create the 
  images for CodeBuild to use in the release pipeline for SSOSync.

Parameters:
  ApplicationName: 
    Description: This will be used to name the pipeline and build resources
    Default: BuildImage
    Type: String
    AllowedPattern: '[A-Za-z0-9-]+'
  CodeStarConnection:
    Description:  Resource ARN for the CodeStar Connection to use
    Type: String
    AllowedPattern: '[A-Za-z0-9:/-]+'

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label: 
          default: Application Configuration
        Parameters:
          - ApplicationName
      - Label:
          default: Connection id for the CodeStar Connection to use
        Parameters:
          - CodeStarConnection
            
    ParameterLabels:
      ApplicationName: 
        default: "SSOSync"
      CodeStarConnection:
        default: "arn:aws:codestar-connections:<AWS::Region>:<AWS::AccountId>:connection/abcd1234-ab12-ab12--ab12-abcdef123456"

Resources:

  CodePipelineLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    UpdateReplacePolicy: Delete
    Properties: 
      RetentionInDays: 120

  ArtifactBucketKey:
    Type: AWS::KMS::Key
    Properties: 
      Description: Key for this CodePipeline
      Enabled: true
      KeySpec: SYMMETRIC_DEFAULT
      KeyUsage: ENCRYPT_DECRYPT
      MultiRegion: false
      PendingWindowInDays: 7
      KeyPolicy:
        Version: 2012-10-17
        Id: key-default-1
        Statement:
        - Sid: Enable IAM User Permissions
          Effect: Allow
          Principal:
            AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
          Action: 'kms:*'
          Resource: '*'

  ArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Delete
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: 'aws:kms'
              KMSMasterKeyID: !GetAtt ArtifactBucketKey.Arn 
            BucketKeyEnabled: true

  ArtifactBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ArtifactBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: DenyUnEncryptedObjectUploads
          Effect: Deny
          Principal: "*"
          Action: s3:PutObject
          Resource: !Sub ${ArtifactBucket.Arn}/*
          Condition: 
            StringNotEquals: 
              s3:x-amz-server-side-encryption: aws:kms
        - Sid: RequireKMSEncryption
          Effect: Deny
          Principal: "*"
          Action: s3:PutObject
          Resource: !Sub ${ArtifactBucket.Arn}/*
          Condition:
            StringNotLikeIfExists:
              s3:x-amz-server-side-encryption-aws-kms-key-id: !GetAtt ArtifactBucketKey.Arn
        - Sid: DenyInsecureConnections
          Effect: Deny
          Principal: "*"
          Action: "s3:*"
          Resource: !Sub ${ArtifactBucket.Arn}/*
          Condition: 
            Bool: 
              aws:SecureTransport: false

  BuildImageRepo:
    Type: AWS::ECR::Repository
    DeletionPolicy: Retain
    UpdateReplacePolicy: Delete
    Properties:
      RepositoryName: 'codebuild/golang'
      RepositoryPolicyText:
        Version: '2012-10-17'
        Statement:
          - Action:
              - 'ecr:BatchCheckLayerAvailability'
              - 'ecr:BatchGetImage'
              - 'ecr:GetDownloadUrlForLayer'
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root

  CodePipelineBuildImages:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: BuildImages
      RoleArn: !Sub ${CodePipelineRole.Arn}
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
        EncryptionKey:
          Type: KMS
          Id: !GetAtt ArtifactBucketKey.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: GitHub
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeStarSourceConnection
              OutputArtifacts:
                - Name: Source
              RunOrder: '1'
              Configuration:
                ConnectionArn: !Ref CodeStarConnection
                FullRepositoryId: awslabs/ssosync
                BranchName: CodePipeline
                DetectChanges: true
        - Name: BuildImages
          Actions:
            - Name: golang
              InputArtifacts:
                - Name: Source
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              RunOrder: '1'
              Configuration:
                ProjectName: !Ref CodeBuildGo

  CodeBuildGo:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "BuildImages-Build-Go"
      Description: !Sub Build project for a go.lang container
      ServiceRole: !Ref CodeBuildImagesRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: "cicd/buildimages/buildspec.yml"
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        Type: LINUX_CONTAINER
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: ImageRepo
            Value: golang
          - Name: ImageVersion
            Value: "1.18.2"
          - Name: AccountId
            Value: !Ref AWS::AccountId
          - Name: Region
            Value: !Ref AWS::Region
          - Name: DockerPath
            Value: 'cicd/buildimages/'
      Artifacts:
        Name: !Ref ApplicationName
        Type: CODEPIPELINE
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Ref CodePipelineLogGroup
          StreamName: !Ref CodeBuildGoLogs
          Status: ENABLED

  CodeBuildGoLogs:
    Type: AWS::Logs::LogStream
    Properties:
      LogGroupName: !Ref CodePipelineLogGroup
      LogStreamName: !Sub "BuildImages-Build-go"

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties: 
      RoleName: !Sub ${ApplicationName}-CodePipeline-${AWS::Region}
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal: 
            Service: [codepipeline.amazonaws.com] 
      Path: /
      Policies: 
        - PolicyName: !Sub ${ApplicationName}-CodePipeline-${AWS::Region}
          PolicyDocument:                     
            Version: '2012-10-17'
            Statement: 
            - Action:
              - 'iam:PassRole'
              Effect: Allow
              Resource: '*'
            - Action:
              - 'codestar-connections:UseConnection'
              - 'codestar-connections:GetConnection'
              - 'codestar-connections:ListConnections'
              - 'codestar-connections:ListTagsForResource'
              Resource: !Ref CodeStarConnection
              Effect: Allow
            - Action:
              - 'codebuild:BatchGetBuilds'
              - 'codebuild:StartBuild'
              Resource:
              - !Sub ${CodeBuildGo.Arn}
              Effect: Allow
            - Action:
              - 's3:GetBucketPolicy'
              - 's3:GetBucketVersioning'
              Resource:
              - !Sub ${ArtifactBucket.Arn}
              Effect: Allow
            - Action:
              - 's3:*'
              Resource:
              - !Sub ${ArtifactBucket.Arn}/*
              Effect: Allow
            - Action:
              - 'kms:DescribeKey'
              - 'kms:GenerateDataKey*'
              - 'kms:Encrypt'
              - 'kms:ReEncrypt*'
              - 'kms:Decrypt'
              Effect: Allow
              Resource:
              - !GetAtt ArtifactBucketKey.Arn

  CodeBuildImagesRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ApplicationName}-CodeBuild-Images-${AWS::Region}
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codebuild.amazonaws.com]
      Path: /
      Policies:
        - PolicyName: !Sub ${ApplicationName}-CodeBuild-Images-${AWS::Region}
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Action:
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
              Effect: Allow
              Resource: '*'
            - Action:
              - 'kms:DescribeKey'
              - 'kms:GenerateDataKey*'
              - 'kms:Encrypt'
              - 'kms:ReEncrypt*'
              - 'kms:Decrypt'
              Effect: Allow
              Resource:
              - !GetAtt ArtifactBucketKey.Arn
            - Action: 's3:*'
              Effect: Allow
              Resource:
              - !Sub ${ArtifactBucket.Arn}/*
            - Action: 
              - 'ecr:GetAuthorizationToken'
              - 'ecr:DescribeRepositories'
              - 'ecr:DescribeImages'
              Effect: Allow
              Resource: '*'
            - Action:
              - 'ecr:BatchCheckLayerAvailability'
              - 'ecr:GetDownloadUrlForLayer'
              - 'ecr:GetRepositoryPolicy'
              - 'ecr:ListImages'
              - 'ecr:BatchGetImage'
              - 'ecr:GetLifecyclePolicy'
              - 'ecr:GetLifecyclePolicyPreview'
              - 'ecr:ListTagsForResource'
              - 'ecr:DescribeImageScanFindings'
              - 'ecr:InitiateLayerUpload'
              - 'ecr:UploadLayerPart'
              - 'ecr:CompleteLayerUploadr'
              - 'ecr:PutImage'
              Effect: Allow
              Resource:
              - !Sub ${BuildImageRepo.Arn}

