version: 0.2

env:
  exported-variables:
    - Project
    - Branch
    - Tag
    - CommitId
    - CommitMessage
    - CommitAuthor
    - CommitAuthorEmail
    - CommitHash
    - IsRelease        
    
phases:
  pre_build: 
    commands:
      # Fetch all dependencies
      - chmod +x cicd/gitvars/codebuild-git-wrapper.sh
      - cicd/gitvars/codebuild-git-wrapper.sh $GitRepo $GitBranch

  build:
    commands:
      - Branch=`git branch -a --contains HEAD | sed -n 2p | awk '{ printf $1 }'`
      - export Branch="${Branch#remotes/origin/}"
      - export Project="${APP_Name}"
      - export Tag=`git describe --tags --abbrev=0`
      - export CommitId="$(git log -1 --pretty=%H)"
      - export CommitMessage="$(git log -1 --pretty=%B)"
      - export CommitAuthor="$(git log -1 --pretty=%an)"
      - export CommitAuthorEmail="$(git log -1 --pretty=%ae)"
      - export CommitHash=`git rev-parse --short HEAD`

      - GitReleaseCommit=`git rev-list -n 1 tags/${Tag}`
      - echo $GitReleaseCommit
      - |
        if expr "${GitReleaseCommit}" : "${GitCommit}" >/dev/null; then
          IsRelease=true
        else
          IsRelease=false
        fi

      - |
        if expr "${Branch}" : "master" >/dev/null; then
          IsRelease=false
        fi

      - echo export #!/bin/bash >> gitvars.env
      - echo export CI=true >> gitvars.env 
      - echo export CodeBuild=true >> gitvars.env
      - echo export GitProject=\"${APP_NAME}\" >> gitvars.env
      - echo export GitBranch=\"${Branch}\" >> gitvars.env
      - echo export GitTag=\"${Tag}\" >> gitvars.env
      - echo export GitCommit=\"${CommitId}\" >> gitvars.env
      - echo export GitMessage=\"${CommitMessage}\" >> gitvars.env
      - echo export GitAuthor=\"${CommitAuthor}\" >> gitvars.env
      - echo export GitAuthorEmail=\"${CommitAuthorEmail}\" >> gitvars.env
      - echo export GitVersionHash=\"${CommitHash}\" >> gitvars.env
      - echo export GitReleaseCommit=\"${IsRelease}\" >> gitvars.env

      - cat gitvars.env
      - . ./gitvars.env

      - env | grep Git

artifacts:
  files:
    - gitvars.env
